<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.mission1.repository.UserMapper">

    <resultMap id="CityRegisterResultMap" type="com.project.mission1.entity.CityRegister">
        <id property="cityRegisterId" column="city_register_id"/>
        <result property="userId" column="user_id"/>
        <result property="cityId" column="city_id"/>
        <result property="cityName" column="city_name"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>
    
    <resultMap id="UserResultMap" type="com.project.mission1.entity.User">
        <id property="userId" column="user_id"/>
        <result property="userName" column="username"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="countryId" column="country_id"/>
        <result property="countryName" column="country_name"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
        <collection property="cityRegisters" javaType="list" resultMap="CityRegisterResultMap" />
    </resultMap>

    <insert
        id="saveUser"
        parameterType="com.project.mission1.entity.User"
        keyProperty="userId"
        useGeneratedKeys="true"
    >
        insert into user_tb
        values(0, #{userName}, #{name}, #{gender}, #{countryId}, now(), now())
    </insert>

    <insert id="saveCityRegister">
        insert into city_register_tb
        values
            <foreach collection="cityRegisters" item="cityRegister" separator=",">
                (0, #{cityRegister.userId}, #{cityRegister.cityId}, #{cityRegister.cityName}, now(), now())
            </foreach>
    </insert>
    
    <select id="findUser" resultMap="UserResultMap">
        select
            ut.user_id,
            ut.username,
            ut.name,
            ut.gender,
            ut.country_id,
            ct.country_name,
            crt.city_id,
            crt.city_name,
            ut.create_date,
            ut.update_date
        from
            user_tb ut
            left outer join country_tb ct on (ct.country_id = ut.country_id)
            left outer join city_register_tb crt on (crt.user_id = ut.user_id)
        where
            1 = 1
            <if test="userName != ''">
                and ut.username = #{userName}
            </if>
            <if test="name != ''">
                and ut.name = #{name}
            </if>
            <if test="gender != ''">
                and ut.gender = #{gender}
            </if>
            <if test="countryId != 0">
                and ut.country_id = #{countryId}
            </if>
            <if test="SelectedCitiesList != null and SelectedCitiesList.size() > 0">
                and ut.user_id in (
                select user_id
                from city_register_tb
                where city_id in
                <foreach item="cityId" index="index" collection="SelectedCitiesList" open="(" separator="," close=")">
                    #{cityId}
                </foreach>
                )
            </if>
            <choose>
                <when test="startDate != null and endDate != null">
                    and ut.update_date between #{startDate} and #{endDate}
                </when>
                <when test="startDate != null and endDate == null">
                    and ut.update_date >= #{startDate}
                </when>
                <when test="startDate == null and endDate != null">
                    and #{endDate} >= ut.update_date
                </when>
            </choose>
        order by ut.update_date desc
    </select>

    <select id="findUserByUsername" parameterType="string" resultMap="UserResultMap">
        select
            ut.user_id,
            ut.username,
            ut.name,
            ut.gender,
            ut.country_id,
            ct.country_name,
            crt.city_id,
            crt.city_name,
            ut.create_date,
            ut.update_date
        from
            user_tb ut
            left outer join country_tb ct on (ct.country_id = ut.country_id)
            left outer join city_register_tb crt on (crt.user_id = ut.user_id)
        where
            ut.username = #{username}
    </select>

    <update id="updateUser">
        update
            user_tb
        set
            username = #{userName},
            name = #{name},
            gender = #{gender},
            country_id = #{countryId},
            city_id = #{cityId},
            update_date = now()
        where
            user_id = #{userId}
    </update>

    <delete id="deleteUsersByUserIds" parameterType="list">
        delete
        from
            user_tb
        where
            user_id in (
                <foreach collection="userIds" item="userId" separator=",">
                    #{userId}
                </foreach>
            )
    </delete>


</mapper>