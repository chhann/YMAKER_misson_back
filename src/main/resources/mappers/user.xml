<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.mission1.repository.UserMapper">

    <resultMap id="UserResultMap" type="com.project.mission1.entity.User">
        <id property="userId" column="user_id"/>
        <result property="userName" column="username"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="countryId" column="country_id"/>
        <result property="countryName" column="country_name"/>
        <result property="cityId" column="city_id"/>
        <result property="cityName" column="city_name"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>

    <insert id="saveUser">
        insert into user_tb
        values(0, #{userName}, #{name}, #{gender}, #{countryId}, #{cityId}, now(), now())
    </insert>

    <select id="findUser" resultMap="UserResultMap">
        select
            ut.user_id,
            ut.username,
            ut.name,
            ut.gender,
            ut.country_id,
            ct.country_name,
            ut.city_id,
            ci.city_name,
            ut.create_date,
            ut.update_date
        from
            user_tb ut
            left outer join country_tb ct on (ct.country_id = ut.country_id)
            left outer join city_tb ci on (ci.city_id = ut.city_id)
        where
            1 = 1
            <if test="userName != ''">
                and ut.username = #{userName}
            </if>
            <if test="name != ''">
                and ut.name = #{name}
            </if>
            <if test="gender != ''">
                and ut.gender = #{gender}
            </if>
            <if test="countryId != 0">
                and ut.country_id = #{countryId}
            </if>
            <if test="cityId != 0">
                and ut.city_id = #{cityId}
            </if>
            <choose>
                <when test="startDate != null and endDate != null">
                    and ut.update_date between #{startDate} and #{endDate}
                </when>
                <when test="startDate != null and endDate == null">
                    and ut.update_date >= #{startDate}
                </when>
                <when test="startDate == null and endDate != null">
                    and #{endDate} >= ut.update_date
                </when>
            </choose>

    </select>

    <delete id="deleteUsersByUserIds" parameterType="list">
        delete
        from
            user_tb
        where
            user_id in (
                <foreach collection="userIds" item="userId" separator=",">
                    #{userId}
                </foreach>
            )
    </delete>


</mapper>